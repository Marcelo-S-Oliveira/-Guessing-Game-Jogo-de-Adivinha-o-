#include <stdio.h>
#include <locale.h> // Biblioteca para configurar o local e reconhecer os acentos
#include <stdlib.h> // Para usar a função abs()
#include <time.h>

int main() {
    setlocale(LC_ALL, "Portuguese"); // Configura o locale para português

    // Imprime cabeçalho do jogo
    printf("Bem-vindo ao jogo de adivinhação!\n");
    printf("Chute um número entre 0 e 99:\n\n");

    // Gera o número secreto
    srand(time(0)); // Inicializa o gerador de números aleatórios com uma semente baseada no tempo
    int numerosecreto = rand() % 100; // Gera um número aleatório entre 0 e 99
    int chute;              // Variável para armazenar o chute do jogador
    int tentativas = 1;     // Contador de tentativas
    double pontos = 1000;   // Pontuação inicial

    while (1) { // Loop infinito (só será interrompido com o "break")
        printf("Tentativa %d\n", tentativas);
        printf("Qual é o seu chute? ");
        scanf("%d", &chute); // Lê o chute do jogador

        // Verifica se o chute é negativo
        if (chute < 0) {
            printf("Você não pode chutar números negativos!\n\n");
            continue; // Volta para o início do loop sem incrementar as tentativas
        }

        // Verifica se o jogador acertou
        int acertou = (chute == numerosecreto);
        int maior = chute > numerosecreto;

        if (acertou) {
            printf("Parabéns! Você acertou!\n");
            printf("Jogue de novo, você é um bom jogador!\n\n");
            break; // Sai do loop
        } else if (maior) {
            printf("Seu chute foi maior que o número secreto\n\n");
        } else {
            printf("Seu chute foi menor que o número secreto\n\n");
        }

        // Calcula os pontos perdidos (sempre positivo)
        double pontosperdidos = abs(chute - numerosecreto) / 2.0;
        pontos = pontos - pontosperdidos;

        tentativas++; // Incrementa o número de tentativas
    }

    // Exibe o resultado final
    printf("Você acertou em %d tentativas!\n", tentativas);
    printf("Total de pontos: %.1f\n", pontos);

    return 0; // Indica que o programa terminou com sucesso
}